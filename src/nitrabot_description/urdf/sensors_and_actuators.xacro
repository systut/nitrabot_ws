<?xml version="1.0"?>
<robot name="industrial_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ////////////////////////////DISTANCE SENSOR XACROS//////////////////////////// -->

  <xacro:macro name="distance_sensor_sonar" params="prefix sufix parent mass sizex sizey sizez ox oy oz roll pitch yaw vert_view hor_view update_rate min_range max_range noise">
    <link name="${prefix}_${sufix}">
	  <visual>
	    <geometry>
	  <box size="${sizex} ${sizey} ${sizez}"/>
	        </geometry>
		<material name="White" />
	  </visual>
	  <xacro:inertial_box mass="${mass}" x="${sizex}" y="${sizey}" z="${sizez}" />
	</link>

        <joint name="${parent}_to_${prefix}_${sufix}" type="fixed">
	  <parent link="${parent}"/>
	  <child link="${prefix}_${sufix}"/>
	  <origin xyz="${ox} ${oy} ${oz}" rpy="${roll} ${pitch} ${yaw}"/>
	</joint>

        <gazebo reference="${prefix}_${sufix}">
	  <material>Gazebo/White</material>
	  <sensor type="ray" name="${prefix}_${sufix}">
	    <always_on>true</always_on>
	        <pose>0 0 0 0 0 0</pose>
		<visualize>false</visualize>
		<update_rate>${update_rate}</update_rate>
		<ray>
		  <scan>
		    <horizontal>
			  <samples>5</samples>
			  <resolution>1</resolution>
			  <min_angle>${hor_view-0.01}</min_angle>
			  <max_angle>${hor_view+0.01}</max_angle>
			</horizontal>
		    <vertical>
			  <samples>5</samples>
			  <resolution>1</resolution>
			  <min_angle>${vert_view-0.01}</min_angle>
			  <max_angle>${vert_view+0.01}</max_angle>
			</vertical>
		  </scan>
		  <range>
		    <min>${min_range}</min>
			<max>${max_range}</max>
	        <resolution>0.01</resolution>
		  </range>
		  <!--<noise>
		    <type>gaussian</type>
			Noise parameters based on published spec for Hokuyo laser
			achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
			stddev of 0.01m will put 99.7% of samples within 0.03m of the true
			reading. 
			<mean>0.0</mean>
			<stddev>0.01</stddev>
		  </noise> -->
		</ray>
		<plugin name="gazebo_ros_${prefix}_${sufix}_controller" filename="libhector_gazebo_ros_sonar.so">
		  <gaussianNoise>${noise}</gaussianNoise>
		  <!--<topicName>/sensor/sonar0</topicName>-->
		  <topicName>/${prefix}_${sufix}/sonar</topicName>
		  <frameId>${prefix}_${sufix}</frameId>
		</plugin>	
	  </sensor>
    </gazebo>			
  </xacro:macro>
  
  <xacro:macro name="distance_sensor_laser" params="prefix sufix parent mass ox oy oz hor_view update_rate min_range max_range noise">
    <link name="${prefix}_distance_sensor_link_${sufix}">
	  <visual>
	    <geometry>
    	  <box size="${dist_size} ${dist_size} ${dist_size}"/>
		</geometry>
		<material name="White" />
	  </visual>
	  <xacro:inertial_box mass="${mass}" x="${dist_size}" y="${dist_size}" z="${dist_size}" />
	</link>

	<gazebo reference="${prefix}_distance_sensor_link_${sufix}">
      <material>Gazebo/White</material>
	</gazebo>

	<joint name="${parent}_to_${prefix}_distance_sensor_link_${sufix}" type="fixed">
	  <parent link="${parent}"/>
	  <child link="${prefix}_distance_sensor_link_${sufix}"/>
	  <origin xyz="${ox} ${oy} ${oz}"/>
	</joint>

	<gazebo reference="${prefix}_distance_sensor_link_${sufix}">
	  <sensor type="ray" name="${prefix}_distance_sensor_${sufix}">
	    <always_on>true</always_on>
		<pose>0 0 0 0 0 0</pose>
		<visualize>false</visualize>
		<update_rate>${update_rate}</update_rate>
		<ray>
		  <scan>
		    <horizontal>
			  <samples>3</samples>
			  <resolution>1</resolution>
			  <min_angle>${hor_view-0.01}</min_angle>
			  <max_angle>${hor_view}+0.01</max_angle>
			</horizontal>
		  </scan>
		  <range>
		    <min>${min_range}</min>
			<max>${max_range}</max>
	        <resolution>0.01</resolution>
		  </range>
		  <noise>
		    <type>gaussian</type>
			<!--Noise parameters based on published spec for Hokuyo laser
			achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
			stddev of 0.01m will put 99.7% of samples within 0.03m of the true
			reading.  -->
			<mean>0.0</mean>
			<stddev>${noise}</stddev>
		  </noise>
		</ray>
		<plugin name="gazebo_ros_${parent}_to_${prefix}_distance_sensor_${sufix}_controller" filename="libgazebo_ros_laser.so">
		  <topicName>/${prefix}_distance_sensor_${sufix}/scan</topicName>
		  <frameName>${prefix}_distance_sensor_link_${sufix}</frameName>
		</plugin>	
	  </sensor>
    </gazebo>			
  </xacro:macro>

<!-- ////////////////////////////////////////////////////////////////////////////// -->

<!-- ///////////////////////// Wheel Actuators ///////////////////////// -->
  
  <xacro:macro name="wheel_actuator" params="parent child_name mass length radius ox oy oz roll pitch yaw color axis_x axis_y axis_z mu1 mu2 kp kd">
      <link name="${child_name}" >
      <visual>
        <geometry>
	  <cylinder length="${length}" radius="${radius}" />
        </geometry>
        <origin rpy="${roll} ${pitch} ${yaw}" />
        <material name="${color}" />
      </visual>
      <collision>
        <geometry>
	  <cylinder length="${length}" radius="${radius}" />
        </geometry>
        <origin rpy="${roll} ${pitch} ${yaw}" />
      </collision>
      <xacro:inertial_zylinder_y mass="${mass}" radius="${radius}" height="${length}" />
    </link>
    <gazebo reference="${child_name}" >
      <mu1 value="${mu1}"/>
      <mu2 value="${mu2}"/>
      <kp value="${kp}" />
      <kd value="${kd}" />
      <material>Gazebo/${color}</material>
    </gazebo>
    <joint name="${parent}_to_${child_name}" type="continuous">
      <parent link="${parent}" />
      <child link="${child_name}" />
      <axis xyz="${axis_x} ${axis_y} ${axis_z}" />
      <origin xyz="${ox} ${oy} ${oz}" />
    </joint>
    <transmission name="${child_name}_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${child_name}_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${parent}_to_${child_name}">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>
  
<!-- /////////////////////////////////////////////////////////////////// -->

<!-- ////////////////////////////// Lidar ////////////////////////////// -->

  <xacro:macro name="lidar_sensor" params="parent lidar_name length radius mass ox oy oz update_rate min_angle max_angle min_range max_range range_resolution stdv" >
    <link name="${lidar_name}">
	  <visual>
	    <geometry>
		  <cylinder length="${length}" radius="${radius}"/>
		</geometry>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<material name="Black"/>
	  </visual>
	  <xacro:inertial_zylinder_z mass="${mass}" radius="${radius}" height="${length}" />
	</link>
	<gazebo reference="${lidar_name}">
      <material>Gazebo/Black</material>
  	</gazebo>
	<joint name="$[parent}_to_${lidar_name}" type="fixed">
	  <parent link="${parent}"/>
      <child link="${lidar_name}"/>
	  <origin xyz="${ox} ${oy} ${oz}"/>
	</joint>

	<!-- RPLidar -->
  	<gazebo reference="${lidar_name}">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
	<visualize>false</visualize>
      	<update_rate>${update_rate}</update_rate>
      	<ray>
          <scan>
            <horizontal>
	      <samples>400</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
          	</horizontal>
          </scan>
          <range>
            <min>${min_range}</min>
            <max>${max_range}</max>
          	<resolution>${range_resolution}</resolution>
          </range>
          <noise>
            <type>gaussian</type>
          	<!-- Noise parameters based on published spec for Hokuyo laser
               	achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               	stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               	reading. -->
          	<mean>0.0</mean>
          	<stddev>${stdv}</stddev>
          </noise>
      	</ray>
      	<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName>
          <frameName>laser</frameName>
      	</plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

<!-- /////////////////////////////////////////////////////////////////// -->

<!-- ////////////////////////////// IMU ////////////////////////////// -->

  <xacro:macro name="imu_sensor" params="parent imu_name mass sizex sizey sizez ox oy oz update_rate update_rateHz noise" >
    <link name="${imu_name}">
	  <visual>
	    <geometry>
	      <box size="${sizex} ${sizey} ${sizez}"/>
		</geometry>
	    <material name="White"/>
	  </visual>
	  <xacro:inertial_box mass="${mass}" x="${sizex}" y="${sizey}" z="${sizez}" />
    </link>
	<joint name="${parent}_to_${imu_name}" type="fixed">
	  <parent link="${parent}"/>
	  <child link="${imu_name}"/>
	  <origin xyz="${ox} ${oy} ${oz}"/>
	</joint>
        <!-- maybe switch to the Hector version of the IMU -->
    <gazebo reference="${imu_name}">
      <material>Gazebo/White</material>
	  <gravity>true</gravity>
	  <sensor name="${imu_name}_sensor" type="imu">
	    <always_on>true</always_on>
	    <update_rate>${update_rate}</update_rate>
	    <visualize>true</visualize>
	    <topic>__default_topic__</topic>
  		<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
		  <topicName>imu</topicName>
                  <bodyName>${imu_name}</bodyName>
		  <updateRateHZ>${update_rateHz}</updateRateHZ>
                  <gaussianNoise>${noise}</gaussianNoise>
		  <xyzOffset>0 0 0</xyzOffset>
		  <rpyOffset>0 0 0</rpyOffset>
                  <frameName>${imu_name}</frameName>
	    </plugin>
	    <pose>0 0 0 0 0 0</pose>
	  </sensor>
    </gazebo>
  </xacro:macro>

<!-- ///////////////////////////////////////////////////////////////// -->

</robot>
