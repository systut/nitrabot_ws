DWAPlannerROS:

# Robot Configuration Parameters - Kobuki
  # max_vel_x: 0.5  # 0.55
  # min_vel_x: 0.0

  # max_vel_y: 0.0  # diff drive robot
  # min_vel_y: 0.0  # diff drive robot

  # max_vel_trans: 0.25 # choose slightly less than the base's capability
  # min_vel_trans: 0.1  # this is the min trans velocity when there is negligible rotational velocity
  # trans_stopped_vel: 0.1

  # # Warning!
  # #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  # #   are non-negligible and small in place rotational velocities will be created.

  # max_vel_theta: 1.0  # choose slightly less than the base's capability
  # min_vel_theta: -1.0 #0.28  # this is the min angular velocity when there is negligible translational velocity
  # theta_stopped_vel: 0.0 #0.28

  # acc_lim_x: 2.5 # maximum is theoretically 2.0, but we
  # acc_lim_theta: 3.2
  # acc_lim_y: 0.0      # diff drive robot
  acc_lim_x: 2.5
  acc_lim_y: 0
  acc_lim_th: 3.2

  max_vel_x: 0.5
  min_vel_x: 0.0
  max_vel_y: 0
  min_vel_y: 0

  max_trans_vel: 0.5
  min_trans_vel: 0.1
  max_rot_vel: 1.0
  min_rot_vel: 0.2

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1  # 0.05
  xy_goal_tolerance: 0.2  # 0.10
  latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  # sim_time: 2.0       # 1.7
  # vx_samples: 6       # 3
  # vy_samples: 1       # diff drive robot, there is only one sample
  # vtheta_samples: 20  # 20
  # controller_frequency: 20.0
  sim_time: 2.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

# Trajectory Scoring Parameters
  # path_distance_bias: 16.0      # 32.0   - weighting for how much it should stick to the global path plan
  # goal_distance_bias: 24.0      # 24.0   - wighting for how much it should attempt to reach its goal
  # occdist_scale: 0.5            # 0.01   - weighting for how much the controller should avoid obstacles
  # forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  # stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
  # scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  # max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true 

# Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1

# Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true
  global_frame_id: odom


# Differential-drive robot configuration - necessary?
#  holonomic_robot: false
