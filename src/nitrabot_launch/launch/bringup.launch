<launch>
    <arg name="robot_port" default="/dev/ttyUSB0" />
    <arg name="lidar2d" default="false" />
    <!--<group if="$(arg lidar2d)">
        <include ns="lidar0" file="$(find rplidar_ros)/launch/rplidar.launch">
            <arg name="serial_port" value="/dev/ttyUSB0"/>
            <arg name="frame_id" value="laser0"/>
        </include> 
        
        <include ns="lidar1" file="$(find rplidar_ros)/launch/rplidar.launch">
            <arg name="serial_port" value="/dev/ttyUSB1"/>
            <arg name="frame_id" value="laser1"/>
        </include>
        
        <node pkg="tf" type="static_transform_publisher" name="lidar_1_to_base_link" args="0 0.55 0 0 0 0 /laser1 /laser0 100" /> 
        
        <node pkg="tf" type="static_transform_publisher" name="lidar_0_to_base_link" args="0.335 0.275 0 3.1415 0 0 /base_link /laser1 100" /> 
        
        <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
            <param name="destination_frame" value="base_link"/>
            <param name="cloud_destination_topic" value="/merged/cloud"/>
            <param name="scan_destination_topic" value="/scan"/>
            <param name="laserscan_topics" value ="/lidar0/scan /lidar1/scan" /> 
            <param name="angle_min" value="-3.14"/>
            <param name="angle_max" value="3.14"/>
            <param name="angle_increment" value="0.0058"/>
            <param name="scan_time" value="0.0333333"/>
            <param name="range_min" value="0.30"/>
            <param name="range_max" value="40.0"/>
        </node>
    </group>-->
    
    <group  if="$(arg lidar2d)">
        <include file="$(find rplidar_ros)/launch/rplidar.launch" />
        
        <node pkg="tf" type="static_transform_publisher" name="base_foot_print_to_base_link" args="0 0 0.098 0 0 0 /base_footprint /base_link 100" />

    </group>

    <group unless="$(arg lidar2d)">
        <include file="$(find nitra_robot)/launch/3d_lidar.launch"/>

        <node pkg="tf" type="static_transform_publisher" name="velodyne_to_laser" args="0 0 0 0 0 0 /laser /velodyne 100" /> 

        <node pkg="tf" type="static_transform_publisher" name="velodyne_to_base_link" args="0.3 0 0 0 0 0 /base_link /laser 100" />
        
    </group>
    
    <!--<include file="$(find rt_usb_9axisimu_driver)/launch/rt_usb_9axisimu_driver.launch"/>

    <node name="imu_filter_node" pkg="imu_filter_madgwick" type="imu_filter_node" output="screen">
        <remap from="imu/data" to="imu"/>
        <param name="publish_tf" value="false"/>
    </node>


    <node pkg="tf" type="static_transform_publisher" name="imu_link_to_base_footprint" args="0 0 0 0 0 0 /base_link /imu_link 100" /> 
-->

    <!-- launch communication with the robot -->
    <node name="robot_communication" pkg="industrial_robot_qt" type="robot_communication" >
        <param name="port" value="$(arg robot_port)" />
    </node>
    <!--<node name="encoder_to_odom" pkg="industrial_robot_qt" type="encoder_to_odom" />-->
    <!-- START LOGGER -->
    <node pkg="logger" type="logger" name="pose_logger"/>
</launch>
